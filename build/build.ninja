# This is the build file for project "glava"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.8.2

# Rules for module scanning.

# Rules for compiling.

rule c_COMPILER
 command = cc $ARGS -MD -MQ $out -MF $DEPFILE -o $out -c $in
 deps = gcc
 depfile = $DEPFILE_UNQUOTED
 description = Compiling C object $out

rule cpp_COMPILER
 command = c++ $ARGS -MD -MQ $out -MF $DEPFILE -o $out -c $in
 deps = gcc
 depfile = $DEPFILE_UNQUOTED
 description = Compiling C++ object $out

# Rules for linking.

rule STATIC_LINKER
 command = rm -f $out && gcc-ar $LINK_ARGS $out $in
 description = Linking static target $out

rule c_LINKER
 command = cc $ARGS -o $out $in $LINK_ARGS
 description = Linking target $out

rule SHSYM
 command = /usr/bin/meson --internal symbolextractor /media/user/2bb69c45-33e8-4b8b-a5f4-dd330073b172/@home/int3rlud3/Desktop/initial_boot/glava/build $in $IMPLIB $out $CROSS
 description = Generating symbol file $out
 restat = 1

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/meson --internal regenerate /media/user/2bb69c45-33e8-4b8b-a5f4-dd330073b172/@home/int3rlud3/Desktop/initial_boot/glava /media/user/2bb69c45-33e8-4b8b-a5f4-dd330073b172/@home/int3rlud3/Desktop/initial_boot/glava/build
 description = Regenerating build files.
 generator = 1

# Phony build target, always out of date

build PHONY: phony 

# Build rules for targets

build libglfft.a.p/glfft_glfft.cpp.o: cpp_COMPILER ../glfft/glfft.cpp
 DEPFILE = libglfft.a.p/glfft_glfft.cpp.o.d
 DEPFILE_UNQUOTED = libglfft.a.p/glfft_glfft.cpp.o.d
 ARGS = -Ilibglfft.a.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O2 -DGLAVA_UNIX -DGLAVA_GLX '-DGLAVA_VERSION="v1.6.3-90-g6fc0e32"' '-DSHADER_INSTALL_PATH="/etc/xdg/glava"' '-DGLAVA_RESOURCE_PATH="/usr/share/glava/resources"' -fPIC

build libglfft.a.p/glfft_glfft_gl_interface.cpp.o: cpp_COMPILER ../glfft/glfft_gl_interface.cpp
 DEPFILE = libglfft.a.p/glfft_glfft_gl_interface.cpp.o.d
 DEPFILE_UNQUOTED = libglfft.a.p/glfft_glfft_gl_interface.cpp.o.d
 ARGS = -Ilibglfft.a.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O2 -DGLAVA_UNIX -DGLAVA_GLX '-DGLAVA_VERSION="v1.6.3-90-g6fc0e32"' '-DSHADER_INSTALL_PATH="/etc/xdg/glava"' '-DGLAVA_RESOURCE_PATH="/usr/share/glava/resources"' -fPIC

build libglfft.a.p/glfft_glfft_wisdom.cpp.o: cpp_COMPILER ../glfft/glfft_wisdom.cpp
 DEPFILE = libglfft.a.p/glfft_glfft_wisdom.cpp.o.d
 DEPFILE_UNQUOTED = libglfft.a.p/glfft_glfft_wisdom.cpp.o.d
 ARGS = -Ilibglfft.a.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O2 -DGLAVA_UNIX -DGLAVA_GLX '-DGLAVA_VERSION="v1.6.3-90-g6fc0e32"' '-DSHADER_INSTALL_PATH="/etc/xdg/glava"' '-DGLAVA_RESOURCE_PATH="/usr/share/glava/resources"' -fPIC

build libglfft.a: STATIC_LINKER libglfft.a.p/glfft_glfft.cpp.o libglfft.a.p/glfft_glfft_gl_interface.cpp.o libglfft.a.p/glfft_glfft_wisdom.cpp.o
 LINK_ARGS = csrDT

build libglava.so.p/glava_fifo.c.o: c_COMPILER ../glava/fifo.c
 DEPFILE = libglava.so.p/glava_fifo.c.o.d
 DEPFILE_UNQUOTED = libglava.so.p/glava_fifo.c.o.d
 ARGS = -Ilibglava.so.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O2 -DGLAVA_UNIX -DGLAVA_GLX '-DGLAVA_VERSION="v1.6.3-90-g6fc0e32"' '-DSHADER_INSTALL_PATH="/etc/xdg/glava"' '-DGLAVA_RESOURCE_PATH="/usr/share/glava/resources"' -fPIC -pthread

build libglava.so.p/glava_glad.c.o: c_COMPILER ../glava/glad.c
 DEPFILE = libglava.so.p/glava_glad.c.o.d
 DEPFILE_UNQUOTED = libglava.so.p/glava_glad.c.o.d
 ARGS = -Ilibglava.so.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O2 -DGLAVA_UNIX -DGLAVA_GLX '-DGLAVA_VERSION="v1.6.3-90-g6fc0e32"' '-DSHADER_INSTALL_PATH="/etc/xdg/glava"' '-DGLAVA_RESOURCE_PATH="/usr/share/glava/resources"' -fPIC -pthread

build libglava.so.p/glava_glava.c.o: c_COMPILER ../glava/glava.c
 DEPFILE = libglava.so.p/glava_glava.c.o.d
 DEPFILE_UNQUOTED = libglava.so.p/glava_glava.c.o.d
 ARGS = -Ilibglava.so.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O2 -DGLAVA_UNIX -DGLAVA_GLX '-DGLAVA_VERSION="v1.6.3-90-g6fc0e32"' '-DSHADER_INSTALL_PATH="/etc/xdg/glava"' '-DGLAVA_RESOURCE_PATH="/usr/share/glava/resources"' -fPIC -pthread

build libglava.so.p/glava_glfw_wcb.c.o: c_COMPILER ../glava/glfw_wcb.c
 DEPFILE = libglava.so.p/glava_glfw_wcb.c.o.d
 DEPFILE_UNQUOTED = libglava.so.p/glava_glfw_wcb.c.o.d
 ARGS = -Ilibglava.so.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O2 -DGLAVA_UNIX -DGLAVA_GLX '-DGLAVA_VERSION="v1.6.3-90-g6fc0e32"' '-DSHADER_INSTALL_PATH="/etc/xdg/glava"' '-DGLAVA_RESOURCE_PATH="/usr/share/glava/resources"' -fPIC -pthread

build libglava.so.p/glava_glsl_ext.c.o: c_COMPILER ../glava/glsl_ext.c
 DEPFILE = libglava.so.p/glava_glsl_ext.c.o.d
 DEPFILE_UNQUOTED = libglava.so.p/glava_glsl_ext.c.o.d
 ARGS = -Ilibglava.so.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O2 -DGLAVA_UNIX -DGLAVA_GLX '-DGLAVA_VERSION="v1.6.3-90-g6fc0e32"' '-DSHADER_INSTALL_PATH="/etc/xdg/glava"' '-DGLAVA_RESOURCE_PATH="/usr/share/glava/resources"' -fPIC -pthread

build libglava.so.p/glava_glx_wcb.c.o: c_COMPILER ../glava/glx_wcb.c
 DEPFILE = libglava.so.p/glava_glx_wcb.c.o.d
 DEPFILE_UNQUOTED = libglava.so.p/glava_glx_wcb.c.o.d
 ARGS = -Ilibglava.so.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O2 -DGLAVA_UNIX -DGLAVA_GLX '-DGLAVA_VERSION="v1.6.3-90-g6fc0e32"' '-DSHADER_INSTALL_PATH="/etc/xdg/glava"' '-DGLAVA_RESOURCE_PATH="/usr/share/glava/resources"' -fPIC -pthread

build libglava.so.p/glava_pulse_input.c.o: c_COMPILER ../glava/pulse_input.c
 DEPFILE = libglava.so.p/glava_pulse_input.c.o.d
 DEPFILE_UNQUOTED = libglava.so.p/glava_pulse_input.c.o.d
 ARGS = -Ilibglava.so.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O2 -DGLAVA_UNIX -DGLAVA_GLX '-DGLAVA_VERSION="v1.6.3-90-g6fc0e32"' '-DSHADER_INSTALL_PATH="/etc/xdg/glava"' '-DGLAVA_RESOURCE_PATH="/usr/share/glava/resources"' -fPIC -pthread

build libglava.so.p/glava_render.c.o: c_COMPILER ../glava/render.c
 DEPFILE = libglava.so.p/glava_render.c.o.d
 DEPFILE_UNQUOTED = libglava.so.p/glava_render.c.o.d
 ARGS = -Ilibglava.so.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O2 -DGLAVA_UNIX -DGLAVA_GLX '-DGLAVA_VERSION="v1.6.3-90-g6fc0e32"' '-DSHADER_INSTALL_PATH="/etc/xdg/glava"' '-DGLAVA_RESOURCE_PATH="/usr/share/glava/resources"' -fPIC -pthread

build libglava.so.p/glava_xwin.c.o: c_COMPILER ../glava/xwin.c
 DEPFILE = libglava.so.p/glava_xwin.c.o.d
 DEPFILE_UNQUOTED = libglava.so.p/glava_xwin.c.o.d
 ARGS = -Ilibglava.so.p -I. -I.. -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O2 -DGLAVA_UNIX -DGLAVA_GLX '-DGLAVA_VERSION="v1.6.3-90-g6fc0e32"' '-DSHADER_INSTALL_PATH="/etc/xdg/glava"' '-DGLAVA_RESOURCE_PATH="/usr/share/glava/resources"' -fPIC -pthread

build libglava.so.p/libglava.so.symbols: SHSYM libglava.so
 IMPLIB = libglava.so

build libglava.so: c_LINKER libglava.so.p/glava_fifo.c.o libglava.so.p/glava_glad.c.o libglava.so.p/glava_glava.c.o libglava.so.p/glava_glfw_wcb.c.o libglava.so.p/glava_glsl_ext.c.o libglava.so.p/glava_glx_wcb.c.o libglava.so.p/glava_pulse_input.c.o libglava.so.p/glava_render.c.o libglava.so.p/glava_xwin.c.o | /usr/lib/x86_64-linux-gnu/libX11.a /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0 /usr/lib/x86_64-linux-gnu/libXext.a /usr/lib/x86_64-linux-gnu/libXext.so.6.4.0 /usr/lib/x86_64-linux-gnu/libXrender.a /usr/lib/x86_64-linux-gnu/libXrender.so.1.3.0 /usr/lib/x86_64-linux-gnu/libdl.a /usr/lib/x86_64-linux-gnu/libm.a /usr/lib/x86_64-linux-gnu/libm.so /usr/lib/x86_64-linux-gnu/libpulse-simple.so.0.1.1 /usr/lib/x86_64-linux-gnu/libpulse.so.0.24.2
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -shared -fPIC -Wl,--start-group -Wl,-soname,libglava.so -pthread -lpulse -lpulse-simple -ldl -lm -lX11 -lXext -lXrender -Wl,--end-group

build glava.p/glava-cli_cli.c.o: c_COMPILER ../glava-cli/cli.c
 DEPFILE = glava.p/glava-cli_cli.c.o.d
 DEPFILE_UNQUOTED = glava.p/glava-cli_cli.c.o.d
 ARGS = -Iglava.p -I. -I.. -I/media/user/2bb69c45-33e8-4b8b-a5f4-dd330073b172/@home/int3rlud3/Desktop/initial_boot/glava/glava -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O2 -DGLAVA_UNIX -DGLAVA_GLX '-DGLAVA_VERSION="v1.6.3-90-g6fc0e32"' '-DSHADER_INSTALL_PATH="/etc/xdg/glava"' '-DGLAVA_RESOURCE_PATH="/usr/share/glava/resources"' -std=c++11

build glava: c_LINKER glava.p/glava-cli_cli.c.o | libglava.so.p/libglava.so.symbols
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 '-Wl,-rpath,$$ORIGIN/' -Wl,-rpath-link,/media/user/2bb69c45-33e8-4b8b-a5f4-dd330073b172/@home/int3rlud3/Desktop/initial_boot/glava/build/ -Wl,--start-group libglava.so -Wl,--end-group

build libglava-obs.so.p/glava-obs_entry.c.o: c_COMPILER ../glava-obs/entry.c
 DEPFILE = libglava-obs.so.p/glava-obs_entry.c.o.d
 DEPFILE_UNQUOTED = libglava-obs.so.p/glava-obs_entry.c.o.d
 ARGS = -Ilibglava-obs.so.p -I. -I.. -I/usr/include/obs -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O2 -DGLAVA_UNIX -DGLAVA_GLX '-DGLAVA_VERSION="v1.6.3-90-g6fc0e32"' '-DSHADER_INSTALL_PATH="/etc/xdg/glava"' '-DGLAVA_RESOURCE_PATH="/usr/share/glava/resources"' -fPIC -pthread

build libglava-obs.so.p/libglava-obs.so.symbols: SHSYM libglava-obs.so
 IMPLIB = libglava-obs.so

build libglava-obs.so: c_LINKER libglava-obs.so.p/glava-obs_entry.c.o | /usr/lib/x86_64-linux-gnu/libGL.so.1.7.0 /usr/lib/x86_64-linux-gnu/libX11.a /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0 /usr/lib/x86_64-linux-gnu/libdl.a /usr/lib/x86_64-linux-gnu/libobs.so.29 libglava.so.p/libglava.so.symbols
 LINK_ARGS = -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -shared -fPIC -Wl,--start-group -Wl,-soname,libglava-obs.so '-Wl,-rpath,$$ORIGIN/' -Wl,-rpath-link,/media/user/2bb69c45-33e8-4b8b-a5f4-dd330073b172/@home/int3rlud3/Desktop/initial_boot/glava/build/ libglava.so -pthread -lGL -lX11 -lobs -ldl -Wl,--end-group

# Test rules

build test: phony meson-internal__test

build meson-internal__test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build benchmark: phony meson-internal__benchmark

build meson-internal__benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

# Install rules

build install: phony meson-internal__install

build meson-internal__install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/bin/meson install --no-rebuild
 pool = console

build dist: phony meson-internal__dist

build meson-internal__dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/meson dist
 pool = console

# Suffix

build uninstall: phony meson-internal__uninstall

build meson-internal__uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/meson --internal uninstall
 pool = console

build all: phony meson-test-prereq meson-benchmark-prereq libglfft.a libglava.so glava libglava-obs.so

build meson-test-prereq: phony 

build meson-benchmark-prereq: phony 

build clean: phony meson-internal__clean

build meson-internal__clean: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/ninja -t clean
 description = Cleaning

build build.ninja: REGENERATE_BUILD ../meson.build /usr/bin/git ../meson_options.txt /usr/bin/find meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build /usr/bin/git ../meson_options.txt /usr/bin/find meson-private/coredata.dat: phony 

default all

